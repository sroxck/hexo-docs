<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>使用git管理项目,推送到github远程仓库</title>
      <link href="/2020/02/27/git%E7%9A%84%E4%BD%BF%E7%94%A8/"/>
      <url>/2020/02/27/git%E7%9A%84%E4%BD%BF%E7%94%A8/</url>
      
        <content type="html"><![CDATA[<blockquote><p>准备工作: git软件,github账户</p></blockquote><p>第一步:在命令行中<code>cd</code>到项目所在目录,或者<code>shift+鼠标右键</code>在项目根目录打开命令行  </p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cd C:\xxx\xxx\xxx</span><br></pre></td></tr></table></figure><p>第二步:在当面目录下执行如下命令</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git init <span class="comment">// 初始化git仓库</span></span><br></pre></td></tr></table></figure><p>第三步:关联远程仓库</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">git remote add origin url</span><br><span class="line"><span class="comment">// origin是远程仓库url的别称,之后可以直接使用这个别称</span></span><br><span class="line"><span class="comment">// url 是要推送到的仓库地址,推荐使用ssh秘钥形式,免密登录</span></span><br></pre></td></tr></table></figure><p>第四步:把代码提交到暂存区</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">git add .</span><br><span class="line"><span class="comment">// 此操作将有过更改的所有文件都添加进暂存区等待提交</span></span><br></pre></td></tr></table></figure><p>第五步:提交代码到本地仓库</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git commit -m <span class="string">'提交信息'</span></span><br></pre></td></tr></table></figure><p>第六步: 推送到远程仓库</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">git push -u origin mastar</span><br><span class="line"><span class="comment">// -u参数代表记住本次推送配置,之后推送直接git push即可</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>微信小程序组件入门初识组件</title>
      <link href="/2020/02/26/%E6%B5%8B%E8%AF%95/"/>
      <url>/2020/02/26/%E6%B5%8B%E8%AF%95/</url>
      
        <content type="html"><![CDATA[<h1 id="标签组件"><a href="#标签组件" class="headerlink" title="标签组件"></a>标签组件</h1><ul><li><p><strong>view标签</strong></p><blockquote><p>类似于div标签,有一个特殊属性<code>hover-class=&quot;&quot;</code> 鼠标移入时添加某个类  </p></blockquote></li><li><p><strong>text标签</strong></p><blockquote><p>只能嵌套text标签,在小程序中,只有这个标签可以长按文字复制,需要添加<code>selectable</code>属性,添加<code>decode</code>属性,可以对空格,回车进行编码     </p></blockquote></li><li><p><strong>image标签</strong></p><ul><li>图片标签,image组件默认宽度320px,高度240px</li><li>语法: <code>&lt;image src=&quot;路径&quot;&gt;</code><ul><li>属性: <code>mode</code> 决定图片内容如何和图片标签宽高做适配,</li><li>默认值: <code>scaleToFill</code> 不保持比例缩放,让图片完成拉伸至填满image元素</li><li>可选值:<code>aspectFit</code> 保持宽高比,保证图片的长的一边能充满image元素,页面轮播图常用属性</li><li>可选值:<code>aspectFill</code> 保持宽高比,保证图片的短的一边能充满image元素,比较少用</li><li>可选值:<code>widthFix</code> 相当于web中图片的模式,宽度指定后,高度会按比例来调整 比较常用</li></ul></li><li>小程序中的图片,支持懒加载,在标签中加入<code>lazy-load</code>属性即可,当图片出现在视口的上下三屏的高度之内的时候,开始加载图片</li></ul></li><li><p><strong>swiper标签</strong></p><blockquote><p>微信内置的轮播图组件</p></blockquote><ul><li>轮播图外层容器使用 <code>swiper</code></li><li>每一个轮播项使用 <code>swiper-item</code></li><li><code>swiper</code>标签存在默认样式<code>width: 100%</code> <code>height: 150px</code></li><li><code>swiper</code>高度无法实现由内容撑开</li><li>使用原图的宽高,等比例给<code>swiper</code>定宽高</li><li>算法: swiper宽度 / swiper 高度 = 原图宽度 / 原图高度</li><li>二次算法: swiper高度 = swiper宽度 * 原图高度 / 原图宽度</li><li>三次算法: swiper高 = 100vw * 原图高 / 原图宽 </li><li>autoplay 自动播放</li><li>interval 图片切换间隔时间</li><li>circular 无缝轮播</li><li>indicator-dots 显示小圆点指示器</li><li>indicator-color 小圆点的颜色</li><li>indicator-active-color 小圆点选中的颜色</li></ul></li></ul><ul><li><p><strong>navigator标签</strong></p><blockquote><p>导航组件,类似超链接标签</p></blockquote><ul><li>使用<code>url</code>属性规定跳转到哪个页面</li><li><code>nacigator</code>是块级标签</li><li><code>target</code>属性规定跳转到当前的小程序还是其他小程序,默认<code>self</code>,在本小程序上跳转,<code>miniPProgram</code> 跳转到其他小程序</li><li><code>open-type</code>跳转的方式<ul><li><code>navigate</code> 默认值 保留当前页面,跳转到应用内的某个页面,不能跳转到tabBar页面</li><li><code>redirect</code> 关闭当前页面,跳转到应用内的某个页面,不能跳转到tabBar页面</li><li><code>switchTab</code> 跳转到tabBar页面,并关闭其他所有非tabBar页面</li><li><code>reLaunch</code> 关闭所有页面,打开到应用内的某个页面,可以随便跳转</li><li><code>navigateBack</code> 关闭当前页面,返回上一级页面或多级页面,可通过<code>getCurrentPages()</code>获取当前的页面栈,决定要返回几层</li><li><code>exit</code> 退出小程序,<code>target=&quot;miniPProgram&quot;</code>时生效</li></ul></li></ul></li><li><p><strong>rich-text标签</strong></p><blockquote><p>富文本标签,可以将字符串解析成对应标签,类似vue中的<code>v-html</code>功能</p></blockquote><ul><li>通过<code>nodes</code>属性来实现<ul><li>接收标签字符串 最常用</li><li>接收对象数组</li></ul></li></ul></li><li><p><strong>button标签</strong></p><ul><li>外观属性<ul><li><code>size</code>控制按钮的大小 值:default,mini,</li><li><code>type</code>控制按钮的类型 值:default=&gt;灰色,primary=&gt;绿色,warn=&gt;红色</li><li><code>plain</code>控制按钮是否镂空 值: false,true</li><li><code>loading</code>是否在按钮前面添加等待图标 值: false,true</li></ul></li><li>开放属性<ul><li>contact 直接打开  客服对话功能  需要在微信小程序的后台配置  只能够通过真机调试来打开 </li><li>share 转发当前的小程序 到微信朋友中   不能把小程序 分享到 朋友圈 </li><li>getPhoneNumber 获取当前用户的手机号码信息 结合一个事件来使用  不是企业的小程序账号 没有权限来获取用户的手机号码 <ul><li>1 绑定一个事件 bindgetphonenumber </li><li>2 在事件的回调函数中  通过参数来获取信息 </li><li>3 获取到的信息  已经加密过了 </li></ul></li><li>getUserInfo 获取当前用户的个人信息<ul><li>1 使用方法 类似 获取用户的手机号码</li><li>2 可以直接获取 不存在加密的字段 </li></ul></li><li>launchApp 在小程序当中 直接打开 app<ul><li>1 需要现在 app中 通过app的某个链接 打开 小程序</li><li>2 在小程序 中 再通过 这个功能 重新打开 app</li><li>3 找到 京东的app 和 京东的小程序  </li></ul></li><li>openSetting 打开小程序内置的 授权页面<ul><li>授权页面中 只会出现 用户曾经点击过的 权限 </li></ul></li><li>feedback 打开 小程序内置的 意见反馈页面 <ul><li>只能够通过真机调试来打开 </li></ul></li></ul></li></ul></li><li><p><strong>icon标签</strong></p><blockquote><p>小程序中的字体图标</p></blockquote><ul><li>type: 图标的类型<ul><li>有效值: <code>&#39;success&#39;, &#39;success_no_circle&#39;, &#39;info&#39;, &#39;warn&#39;, &#39;waiting&#39;, &#39;cancel&#39;,&#39;download&#39;, &#39;search&#39;, &#39;clear&#39;</code> </li></ul></li><li>size: 图标的大小<ul><li>有效值: 数值,默认23</li></ul></li><li>color: 图标的颜色</li></ul></li><li><p><strong>radio标签</strong></p><ul><li>radio标签必须要和父元素<code>radio-group</code>配合使用</li><li><code>value</code>:选中的单选框的值</li><li>需要给<code>radio-group</code>绑定<code>change</code>事件</li></ul></li></ul>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>十分钟简单搭建个人博客</title>
      <link href="/2020/02/26/%E5%8D%81%E5%88%86%E9%92%9F%E7%AE%80%E5%8D%95%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2/"/>
      <url>/2020/02/26/%E5%8D%81%E5%88%86%E9%92%9F%E7%AE%80%E5%8D%95%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2/</url>
      
        <content type="html"><![CDATA[]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>helo</title>
      <link href="/2020/02/26/helo/"/>
      <url>/2020/02/26/helo/</url>
      
        <content type="html"><![CDATA[]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>Hello World</title>
      <link href="/2020/02/26/hello-world/"/>
      <url>/2020/02/26/hello-world/</url>
      
        <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/" target="_blank" rel="noopener">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="noopener">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="noopener">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="noopener">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">"My New Post"</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="noopener">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="noopener">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="noopener">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html" target="_blank" rel="noopener">Deployment</a></p>]]></content>
      
      
      
    </entry>
    
    
  
  
</search>
